name: workflow.yml
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  BASE_IMAGE_NAME: ${{ vars.BASE_IMAGE_NAME || github.repository }}

jobs:
  build:
    runs-on: [ self-hosted ]
    permissions:
      contents: read
      packages: write
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build maven modules
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'
      - run: |
          sh build.sh
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push base image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: 'true'
          tags:
            ${{ steps.base-meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:pkg-${{ github.sha }}

  deploy:
    runs-on: [self-hosted]
    needs: [build]
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Verify kubectl connection
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Update deployment image
      run: |
        kubectl set image deployment/service-provider \
          service-provider=${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:pkg-${{ github.sha }} \
          -n service-provider-3g
        
        echo "Updated deployment with image: ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:pkg-${{ github.sha }}"

    - name: Wait for rollout
      run: |
        kubectl rollout status deployment/service-provider -n service-provider --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -n service-provider -l app=service-provider
        kubectl get deployment service-provider -n service-provider -o wide
        echo "Deployment successful!"

    - name: Get deployment info
      run: |
        echo "### Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: ${{ env.REGISTRY }}/${{ env.BASE_IMAGE_NAME }}:pkg-${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Namespace**: service-provider" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment**: service-provider" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: $(kubectl get deployment service-provider -n service-provider -o jsonpath='{.status.conditions[?(@.type=="Available")].status}')" >> $GITHUB_STEP_SUMMARY
        echo "- **Ready Replicas**: $(kubectl get deployment service-provider -n service-provider -o jsonpath='{.status.readyReplicas}')/$(kubectl get deployment service-provider -n service-provider -o jsonpath='{.spec.replicas}')" >> $GITHUB_STEP_SUMMARY
